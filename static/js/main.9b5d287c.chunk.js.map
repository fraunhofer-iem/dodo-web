{"version":3,"sources":["components/starDivider/CustomDivider.tsx","components/about/About.tsx","components/content/Content.tsx","App.tsx","components/content/IntersectionHook.ts","components/navbar/NavbarLink.tsx","components/navbar/Navbar.tsx","components/title/logo.svg","components/title/Title.tsx","reportWebVitals.ts","index.tsx"],"names":["PossibleColors","getColor","theme","color","WHITE","PRIMARY","palette","primary","main","SECONDARY","secondary","useStyles","makeStyles","createStyles","star","props","marginLeft","marginRight","fontSize","starWrapper","display","justifyContent","alignItems","margin","width","starLine","border","height","borderRadius","maxWidth","StarDivider","classes","className","img","root","flexDirection","paddingBottom","paddingTop","box","columnCount","About","Typography","variant","id","Content","refs","useRef","amount","arr","i","push","React","createRef","fillRefsArray","sections","length","current","useEffect","observer","IntersectionObserver","entries","rootMargin","threshold","forEach","ref","observe","disconnect","useIntersection","Fragment","Toolbar","map","ele","index","element","link","linkActive","paddingLeft","paddingRight","background","TitleLink","Link","href","underline","children","NavbarLink","active","flex","flexGrow","linkSpacing","spacing","appBar","boxShadow","backgroundColor","navRoot","NavBar","useState","activeLink","AppBar","position","titleElement","text","navElements","Title","src","logo","alt","responsiveFontSizes","createMuiTheme","typography","aboutId","contentElements","App","CssBaseline","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b5d287c.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\n\nexport enum PossibleColors {\n  WHITE,\n  PRIMARY,\n  SECONDARY,\n}\n\ninterface Props {\n  color: PossibleColors;\n}\n\nconst getColor = (theme: Theme, color: PossibleColors) => {\n  switch (color) {\n    case PossibleColors.WHITE:\n      return \"#fff\";\n    case PossibleColors.PRIMARY:\n      return theme.palette.primary.main;\n    case PossibleColors.SECONDARY:\n      return theme.palette.secondary.main;\n  }\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    star: (props: Props) => ({\n      color: getColor(theme, props.color),\n      marginLeft: \"1rem\",\n      marginRight: \"1rem\",\n      fontSize: \"3rem\",\n    }),\n    starWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      margin: \"1.5rem 0 1.5rem\",\n      width: \"100%\",\n    },\n    starLine: (props: Props) => ({\n      border: \"solid\",\n      height: \"0.2rem\",\n      borderRadius: \"1rem\",\n      color: getColor(theme, props.color),\n      width: \"100%\",\n      maxWidth: \"9rem\",\n    }),\n  })\n);\n\nexport const StarDivider = (props: Props) => {\n  const classes = useStyles(props);\n  return (\n    <div className={classes.starWrapper}>\n      <div className={classes.starLine} />\n      <StarRoundedIcon className={classes.star} />\n      <div className={classes.starLine} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\n\nimport { PossibleColors, StarDivider } from \"../starDivider/CustomDivider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    img: {\n      width: \"22rem\",\n      marginLeft: \"2rem\",\n    },\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingBottom: \"5rem\",\n      paddingTop: \"4rem\",\n    },\n    box: {\n      marginLeft: \"3rem\",\n      columnCount: 2,\n      width: \"40rem\",\n    },\n  })\n);\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" color=\"textSecondary\">\n        About\n      </Typography>\n      <StarDivider color={PossibleColors.PRIMARY} />\n      <Typography className={classes.box} variant=\"body1\" color=\"textSecondary\">\n        Maturity Models are valuable to communicate the current state of DevOps,\n        especially towards the management. However, they often lack technical\n        depth and do not provide any guidance on improving the current maturity.\n        The research project DoDo addresses these shortcomings by combining a\n        maturity model with technical metrics using a hierarchical system of\n        KPIs. This method empowers its users to explore the detailed information\n        comprehensively, thereby enabling them to discover a clear path for\n        their DevOps journey.\n      </Typography>\n    </div>\n  );\n};\n\nexport default About;\n","import { Toolbar } from \"@material-ui/core\";\nimport React, { useRef } from \"react\";\nimport { useIntersection } from \"./IntersectionHook\";\n\nconst fillRefsArray = (\n  amount: number,\n  arr: Array<React.RefObject<HTMLElement>>\n) => {\n  for (let i = 0; i < amount; i++) {\n    arr.push(React.createRef<HTMLElement>());\n  }\n};\n\ninterface SectionElement {\n  element: JSX.Element;\n  id: string;\n}\n\ninterface Props {\n  sections: Array<SectionElement>;\n}\n\nconst Content = (props: Props) => {\n  const refs = useRef<Array<React.RefObject<HTMLElement>>>([]);\n  fillRefsArray(props.sections.length, refs.current);\n  useIntersection(refs);\n\n  const elementToSection = (ele: SectionElement, index: number) => {\n    return (\n      <section key={\"sec_key\" + ele.id} id={ele.id} ref={refs.current[index]}>\n        {ele.element}\n      </section>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Toolbar />\n      {props.sections.map(elementToSection)}\n    </React.Fragment>\n  );\n};\n\nexport default Content;\n","import {\n  CssBaseline,\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport About from \"./components/about/About\";\nimport Content from \"./components/content/Content\";\n\nimport NavBar from \"./components/navbar/Navbar\";\nimport Title from \"./components/title/Title\";\n\nconst theme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      text: {\n        primary: \"#fff\",\n        secondary: \"#2c3e50\",\n      },\n      primary: {\n        main: \"#2c3e50\",\n      },\n      secondary: {\n        main: \"#1abc9c\",\n      },\n    },\n    typography: {},\n  })\n);\n\nexport const titleId = \"title\";\nexport const aboutId = \"about\";\nexport const resultsId = \"results\";\nexport const teamId = \"team\";\nexport const partnersId = \"partners\";\n\nconst titleElement = {\n  text: \"DoDo\",\n  href: \"#title\",\n};\n\nconst getHrefFromId = (id: string) => \"#\" + id;\n\nconst navElements = [{ text: \"About\", href: getHrefFromId(aboutId) }];\n\nconst contentElements = [\n  { element: <Title />, id: titleId },\n  { element: <About />, id: aboutId },\n];\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <NavBar navElements={navElements} titleElement={titleElement} />\n        <Content sections={contentElements} />\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\n\nexport function useIntersection(\n  refs: React.MutableRefObject<React.RefObject<HTMLElement>[]>\n) {\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 1.0,\n    };\n    const callback = (entries: IntersectionObserverEntry[]) => {\n      // we can use the id of the element, which equals the href of the nav buttons,\n      // to identify the currently intersecting (active) element and thereby highlight\n      // the corresponding nav button.\n      // this should be done using mobx or some state management. just store an active\n      // section with the correct id (# represents no selection and should be on top of the page).\n    };\n    const observer = new IntersectionObserver(callback, options);\n    //observer.current = new IntersectionObserver(callback, options);\n    refs.current.forEach((ref) => {\n      if (ref.current !== null) observer.observe(ref.current);\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [refs]);\n}\n","import React, { PropsWithChildren } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    link: {\n      \"&:hover\": {\n        color: theme.palette.secondary.main,\n      },\n      color: \"#fff\",\n    },\n    linkActive: {\n      borderRadius: \"0.5rem\",\n      paddingTop: \"0.75rem\",\n      paddingLeft: \"0.5rem\",\n      paddingRight: \"1rem\",\n      paddingBottom: \"0.75rem\",\n      background: theme.palette.secondary.main,\n      color: \"#fff\",\n    },\n  })\n);\n\ninterface LinkProps {\n  href: string;\n  active: boolean;\n}\n\nexport const TitleLink = (props: PropsWithChildren<{}>) => {\n  return (\n    <Typography variant=\"h4\" color=\"textPrimary\">\n      <Link color=\"textPrimary\" href={\"#\"} underline=\"none\">\n         {props.children}\n      </Link>\n    </Typography>\n  );\n};\n\nconst NavbarLink: React.FC<LinkProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Link\n      href={props.href}\n      underline=\"none\"\n      className={props.active ? classes.linkActive : classes.link}\n    >\n       {props.children}\n    </Link>\n  );\n};\nexport default NavbarLink;\n","import React, { useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport NavbarLink, { TitleLink } from \"./NavbarLink\";\nimport { Typography, Toolbar, AppBar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    flex: {\n      flexGrow: 1,\n    },\n    linkSpacing: {\n      \"& > * + *\": {\n        marginLeft: theme.spacing(2),\n      },\n    },\n    appBar: {\n      boxShadow: \"none\",\n      backgroundColor: theme.palette.primary.main,\n    },\n    navRoot: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n    },\n  })\n);\n\ninterface Props {\n  titleElement: NavElement;\n  navElements: Array<NavElement>;\n}\n\ninterface NavElement {\n  text: string;\n  href: string;\n}\nconst NavBar: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  // ToDo: read this from mobx state\n  const [activeLink] = useState(\"\");\n\n  const navElementToLink = (ele: NavElement) => {\n    return (\n      <NavbarLink\n        key={\"key_\" + ele.href}\n        active={activeLink === ele.href}\n        href={ele.href}\n      >\n        {ele.text}\n      </NavbarLink>\n    );\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <div className={classes.navRoot}>\n          <TitleLink>{props.titleElement.text}</TitleLink>\n\n          <Typography\n            variant=\"h6\"\n            color=\"textPrimary\"\n            className={classes.linkSpacing}\n          >\n            {props.navElements.map(navElementToLink)}\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/logo.21ab40fe.svg\";","import React from \"react\";\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport logo from \"./logo.svg\";\nimport { PossibleColors, StarDivider } from \"../starDivider/CustomDivider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    img: {\n      width: \"22rem\",\n      marginLeft: \"2rem\",\n    },\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      background: theme.palette.secondary.main,\n      paddingBottom: \"5rem\",\n      paddingTop: \"4rem\",\n    },\n    box: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n    },\n  })\n);\n\nconst Title = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <img className={classes.img} src={logo} alt={\"DoDo Project Logo\"} />\n      <Typography variant=\"h1\" color=\"textPrimary\">\n        DoDo\n      </Typography>\n      <StarDivider color={PossibleColors.WHITE} />\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Doing Optimized DevOps\n      </Typography>\n    </div>\n  );\n};\n\nexport default Title;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}